plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
}

group = 'hj.board'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.springframework.boot:spring-boot-devtools' // 서버 다시 시작 없이 rebuild만으로 데이터 체인지 가능
	
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6' // sql 파라미터를 로그로 남겨준다
    testImplementation 'junit:junit:4.13.1'

//	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA' // jpa ebtityManagerFactory 생성에 필요?

	// h2
	runtimeOnly 'com.h2database:h2'
	// mysql
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
//	implementation 'mysql:mysql-connector-java'
	 runtimeOnly 'mysql:mysql-connector-java'


	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	//Swagger
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
	delete file('src/main/generated')
}


